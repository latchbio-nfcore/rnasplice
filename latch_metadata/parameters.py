
from dataclasses import dataclass
import typing
import typing_extensions

from flytekit.core.annotation import FlyteAnnotation

from latch.types.metadata import NextflowParameter
from latch.types.file import LatchFile
from latch.types.directory import LatchDir, LatchOutputDir

# Import these into your `__init__.py` file:
#
# from .parameters import generated_parameters

generated_parameters = {
    'input': NextflowParameter(
        type=LatchFile,
        default=None,
        section_title='Input/output options',
        description='Path to comma-separated file containing information about the samples in the experiment.',
    ),
    'contrasts': NextflowParameter(
        type=str,
        default=None,
        section_title=None,
        description='Path to comma-separated file containing information about the contrasts in the experiment.',
    ),
    'source': NextflowParameter(
        type=str,
        default='fastq',
        section_title=None,
        description='Source of input files.',
    ),
    'outdir': NextflowParameter(
        type=typing_extensions.Annotated[LatchDir, FlyteAnnotation({'output': True})],
        default=None,
        section_title=None,
        description='The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.',
    ),
    'email': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Email address for completion summary.',
    ),
    'multiqc_title': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='MultiQC report title. Printed as page header, used for filename if not otherwise specified.',
    ),
    'save_merged_fastq': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save FastQ files after merging re-sequenced libraries in the results directory.',
    ),
    'genome': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Reference genome options',
        description='Name of iGenomes reference.',
    ),
    'fasta': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to FASTA genome file.',
    ),
    'gtf': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to GTF annotation file.',
    ),
    'gff': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to GFF3 annotation file.',
    ),
    'transcript_fasta': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to FASTA transcriptome file.',
    ),
    'star_index': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to directory or tar.gz archive for pre-built STAR index.',
    ),
    'salmon_index': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to directory or tar.gz archive for pre-built Salmon index.',
    ),
    'gencode': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specify if your transcript FASTA file is in GENCODE format.',
    ),
    'gtf_extra_attributes': NextflowParameter(
        type=typing.Optional[str],
        default='gene_name',
        section_title=None,
        description='By default, the pipeline uses the gene_name field to obtain additional gene identifiers from the input GTF file when running Salmon.',
    ),
    'gtf_group_features': NextflowParameter(
        type=typing.Optional[str],
        default='gene_id',
        section_title=None,
        description='Define the attribute type used to group features in the GTF file when running Salmon.',
    ),
    'save_reference': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If generated by the pipeline save the STAR index in the results directory.',
    ),
    'multiqc_methods_description': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Generic options',
        description='Custom MultiQC yaml file containing HTML including a methods description.',
    ),
    'clip_r1': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title='Read trimming options',
        description="Instructs Trim Galore to remove bp from the 5' end of read 1 (or single-end reads).",
    ),
    'clip_r2': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description="Instructs Trim Galore to remove bp from the 5' end of read 2 (paired-end reads only).",
    ),
    'three_prime_clip_r1': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description="Instructs Trim Galore to remove bp from the 3' end of read 1 AFTER adapter/quality trimming has been performed.",
    ),
    'three_prime_clip_r2': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description="Instructs Trim Galore to remove bp from the 3' end of read 2 AFTER adapter/quality trimming has been performed.",
    ),
    'trim_nextseq': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='Instructs Trim Galore to apply the --nextseq=X option, to trim based on quality after removing poly-G tails.',
    ),
    'save_trimmed': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save the trimmed FastQ files in the results directory.',
    ),
    'skip_trimming': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Use this if your input FastQ files have already been trimmed outside of the workflow or if you're very confident that there is no adapter contamination in your data.",
    ),
    'skip_trimgalore_fastqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip TrimGalore! FastQC.',
    ),
    'min_trimmed_reads': NextflowParameter(
        type=typing.Optional[int],
        default=10000,
        section_title=None,
        description='Minimum number of trimmed reads below which samples are flagged in multiqc output.',
    ),
    'skip_fastqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='QC options',
        description='Skip FastQC.',
    ),
    'skip_bigwig': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Skip bigWig file creation.',
    ),
    'aligner': NextflowParameter(
        type=typing.Optional[str],
        default='star',
        section_title='Alignment options',
        description="Specifies the alignment algorithm to use - available options are 'star_salmon', or 'star'.",
    ),
    'pseudo_aligner': NextflowParameter(
        type=typing.Optional[str],
        default='salmon',
        section_title=None,
        description="Specifies the pseudo aligner to use - available options are 'salmon'. Runs in addition to '--aligner'.",
    ),
    'bam_csi_index': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Create a CSI index for BAM files instead of the traditional BAI index. This will be required for genomes with larger chromosome sizes.',
    ),
    'star_ignore_sjdbgtf': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='When using pre-built STAR indices do not re-extract and use splice junctions from the GTF file.',
    ),
    'salmon_quant_libtype': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description=' Override Salmon library type inferred based on strandedness defined in meta object.',
    ),
    'seq_center': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Sequencing center information to be added to read group of BAM files.',
    ),
    'skip_alignment': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip all of the alignment-based processes within the pipeline.',
    ),
    'save_unaligned': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Where possible, save unaligned reads from either STAR or Salmon to the results directory.',
    ),
    'save_align_intermeds': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save the intermediate BAM files from the alignment step.',
    ),
    'rmats': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='rMATS options',
        description='Run rMATS workflow.',
    ),
    'rmats_splice_diff_cutoff': NextflowParameter(
        type=typing.Optional[float],
        default=0.0001,
        section_title=None,
        description='The cutoff used in the null hypothesis test for differential splicing.',
    ),
    'rmats_paired_stats': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Use paired statistical model.',
    ),
    'rmats_read_len': NextflowParameter(
        type=typing.Optional[int],
        default=40,
        section_title=None,
        description='The length of each read.',
    ),
    'rmats_novel_splice_site': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Detect splicing events that involve an unannotated splice site.',
    ),
    'rmats_min_intron_len': NextflowParameter(
        type=typing.Optional[int],
        default=50,
        section_title=None,
        description='Minimum Intron Length.',
    ),
    'rmats_max_exon_len': NextflowParameter(
        type=typing.Optional[int],
        default=500,
        section_title=None,
        description='Maximum exon length.',
    ),
    'dexseq_exon': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='DEXSeq DEU options',
        description='Run DEXSeq differential exon usage workflow.',
    ),
    'save_dexseq_annotation': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save pre-processed GFF annotation file.',
    ),
    'gff_dexseq': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to GFF3 annotation file.',
    ),
    'alignment_quality': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Minimum alignment quality required for reads to be counted.',
    ),
    'aggregation': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Combine overlapping genes into a single aggregate gene.',
    ),
    'save_dexseq_plot': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Save plots of the per gene DEXSeq results.',
    ),
    'n_dexseq_plot': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Plot the N most significant genes from the DEXSeq results.',
    ),
    'edger_exon': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='edgeR DEU options',
        description='Run edgeR workflow.',
    ),
    'save_edger_plot': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Save plots of the per gene edgeR results.',
    ),
    'n_edger_plot': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Plot the N most significant genes from the edgeR results.',
    ),
    'dexseq_dtu': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='DEXSeq DTU options',
        description='Run DEXSeq differential transcript usage workflow.',
    ),
    'dtu_txi': NextflowParameter(
        type=typing.Optional[str],
        default='dtuScaledTPM',
        section_title=None,
        description='Generate estimated counts using dtuScaledTPM or scaledTPM abundance estimates.',
    ),
    'min_samps_gene_expr': NextflowParameter(
        type=typing.Optional[int],
        default=6,
        section_title=None,
        description='Minimal number of samples where genes should be expressed.',
    ),
    'min_samps_feature_expr': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Minimal number of samples where features should be expressed.',
    ),
    'min_samps_feature_prop': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Minimal proportion of samples where features should be expressed.',
    ),
    'min_gene_expr': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Minimal gene expression.',
    ),
    'min_feature_expr': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Minimal feature expression.',
    ),
    'min_feature_prop': NextflowParameter(
        type=typing.Optional[float],
        default=0.1,
        section_title=None,
        description='Minimal proportion for feature expression. This value should be between 0 and 1.',
    ),
    'sashimi_plot': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Miso',
        description='Create sashimi plots using MISO.',
    ),
    'miso_genes': NextflowParameter(
        type=typing.Optional[str],
        default='ENSG00000004961, ENSG00000005302',
        section_title=None,
        description='List containing identifiers of genes to plot.',
    ),
    'miso_genes_file': NextflowParameter(
        type=typing.Optional[str],
        default='None',
        section_title=None,
        description='New-line separate file containing identifiers of genes to plot.',
    ),
    'miso_read_len': NextflowParameter(
        type=typing.Optional[int],
        default=75,
        section_title=None,
        description='Read length used to calculate coverage.',
    ),
    'fig_height': NextflowParameter(
        type=typing.Optional[int],
        default=7,
        section_title=None,
        description='Sashimi figure height (inches).',
    ),
    'fig_width': NextflowParameter(
        type=typing.Optional[int],
        default=7,
        section_title=None,
        description='Sashimi figure width (inches).',
    ),
    'suppa': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title='SUPPA options',
        description='Run SUPPA workflow.',
    ),
    'suppa_per_local_event': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Quantify event inclusion levels (PSIs) from multiple samples.',
    ),
    'suppa_per_isoform': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Quantify isoform inclusion levels (PSIs) from multiple samples.',
    ),
    'suppa_tpm': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Expression file containing the abundances of all transcripts (ideally in TPM units).',
    ),
    'generateevents_pool_genes': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Redefine genes by clustering together transcripts by genomic stranded overlap and sharing at least one exon.',
    ),
    'generateevents_event_type': NextflowParameter(
        type=typing.Optional[str],
        default='SE SS MX RI FL',
        section_title=None,
        description='Space separated list of events to generate.',
    ),
    'generateevents_boundary': NextflowParameter(
        type=typing.Optional[str],
        default='S',
        section_title=None,
        description='Boundary type (only used for local AS events).',
    ),
    'generateevents_threshold': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Variability treshold.',
    ),
    'generateevents_exon_length': NextflowParameter(
        type=typing.Optional[int],
        default=100,
        section_title=None,
        description='Defines the number of nucleotides to display in the output GTF.',
    ),
    'psiperevent_total_filter': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Minimum total expression of the transcripts involved in the event.',
    ),
    'diffsplice_local_event': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Calculate differential splicing for AS events across multiple conditions with replicates.',
    ),
    'diffsplice_isoform': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Calculate differential splicing for differential transcript usage across multiple conditions with replicates',
    ),
    'diffsplice_method': NextflowParameter(
        type=typing.Optional[str],
        default='empirical',
        section_title=None,
        description='The method to use to calculate the significance.',
    ),
    'diffsplice_area': NextflowParameter(
        type=typing.Optional[int],
        default=1000,
        section_title=None,
        description='Integer indicating the number of points in the local area of the delta PSI - average TPM distribution.',
    ),
    'diffsplice_lower_bound': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Lower-bound for the absolute delta PSI value to test for significance.',
    ),
    'diffsplice_gene_correction': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Correct the p-values by gene.',
    ),
    'diffsplice_paired': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Indicates if replicates across conditions are paired.',
    ),
    'diffsplice_alpha': NextflowParameter(
        type=typing.Optional[float],
        default=0.05,
        section_title=None,
        description='Family-wise error rate to use for the multiple test correction.',
    ),
    'diffsplice_median': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Use the median to calculate the Delta PSI, instead of the mean.',
    ),
    'diffsplice_tpm_threshold': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Minimum expression (calculated as average TPM value within-replicates and between-conditions) to be included in the analysis.',
    ),
    'diffsplice_nan_threshold': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Proportion of samples with nan values allowed per condition to calculate a DeltaPSI .',
    ),
    'clusterevents_local_event': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Cluster events according to PSI values across conditions',
    ),
    'clusterevents_isoform': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Cluster transcripts according to PSI values across conditions',
    ),
    'clusterevents_sigthreshold': NextflowParameter(
        type=typing.Optional[float],
        default=None,
        section_title=None,
        description='P-value threshold to consider an event significant from the dpsi file.',
    ),
    'clusterevents_dpsithreshold': NextflowParameter(
        type=typing.Optional[float],
        default=0.05,
        section_title=None,
        description='Lower-bound for the absolute delta PSI value to cluster.',
    ),
    'clusterevents_eps': NextflowParameter(
        type=typing.Optional[float],
        default=0.05,
        section_title=None,
        description='Maximum distance (between 0 and 1) to consider two events as members of the same cluster.',
    ),
    'clusterevents_metric': NextflowParameter(
        type=typing.Optional[str],
        default='euclidean',
        section_title=None,
        description='Distance metric.',
    ),
    'clusterevents_separation': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='Maximum distance in PSI space of an event to a cluster.',
    ),
    'clusterevents_min_pts': NextflowParameter(
        type=typing.Optional[int],
        default=20,
        section_title=None,
        description='Minimum number of events required per cluster.',
    ),
    'clusterevents_method': NextflowParameter(
        type=typing.Optional[str],
        default='DBSCAN',
        section_title=None,
        description='Clustering method to use (DBSCAN, OPTICS).',
    ),
}

